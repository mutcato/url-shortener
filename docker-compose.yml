version: '3.7'

services:
  keygenerator:
    build: ./keygenerator
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"    
    volumes:
      - ./keygenerator:/usr/src/app/
    ports:
      - "8001:8000"
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
  urlshortener:
    build: ./urlshortener
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./urlshortener:/usr/src/app/
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    links:
      - keygenerator
    depends_on:
      - db
      - redis
  celery:
    build: ./keygenerator
    command: celery -A keygenerator worker -l info
    volumes:
      - ./keygenerator/:/usr/src/app/
    env_file:
      - ./.env
    environment:
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
    depends_on:
      - redis
  celery-beat:
    build: ./keygenerator
    command: celery -A keygenerator beat -l info
    volumes:
      - ./keygenerator/:/usr/src/app/
    env_file:
      - ./.env
    environment:
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
    depends_on:
      - redis
  db:
    image: postgres:alpine
    restart: on-failure:5
    environment:
      - POSTGRES_HOST=0.0.0.0
      - POSTGRES_DB=urlshortener
      - POSTGRES_USER=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - urlshortener_db:/tmp/pgdata
    ports:
      - "5432:5432"
  redis:
    image: redis:5.0.7
    ports:
      - "6379:6379"
    restart: always

volumes:
    urlshortener_db: